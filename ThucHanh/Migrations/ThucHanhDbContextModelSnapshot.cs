// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ThucHanh.Models;

#nullable disable

namespace ThucHanh.Migrations
{
    [DbContext(typeof(ThucHanhDbContext))]
    partial class ThucHanhDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.2");

            modelBuilder.Entity("ThucHanh.Models.Exam", b =>
                {
                    b.Property<int>("ExamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Score")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StudentId")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("StudentId1")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SubjectId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ExamId");

                    b.HasIndex("StudentId1");

                    b.HasIndex("SubjectId");

                    b.ToTable("Exams");
                });

            modelBuilder.Entity("ThucHanh.Models.Student", b =>
                {
                    b.Property<long>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.HasKey("StudentId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            StudentId = 1L,
                            Address = "Yên Xá, Tân Triều, Thanh Trì, Hà Nội",
                            DateOfBirth = new DateTime(2002, 1, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "nghjemthjvan@gmail.com",
                            Name = "Nghiêm Thị Vân"
                        },
                        new
                        {
                            StudentId = 2L,
                            Address = "Trạch Xá, Hòa Lâm, Ứng Hòa, Hà Nội",
                            DateOfBirth = new DateTime(1996, 5, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "laphuongthao123@gmail.com",
                            Name = "Lã Thị Phương Thảo"
                        },
                        new
                        {
                            StudentId = 3L,
                            Address = "Hùng Lô, Việt Trì, Phú Thọ",
                            DateOfBirth = new DateTime(2001, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "nganguyen2k1@gmail.com",
                            Name = "Nguyễn Thúy Nga"
                        });
                });

            modelBuilder.Entity("ThucHanh.Models.Subject", b =>
                {
                    b.Property<int>("SubjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("SubjectCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("SubjectName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.HasKey("SubjectId");

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            SubjectId = 1,
                            Description = "Môn tin học văn phòng",
                            EndDate = new DateTime(2022, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2022, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectCode = "MON001",
                            SubjectName = "Tin học văn phòng"
                        },
                        new
                        {
                            SubjectId = 2,
                            Description = "Mô tả môn toán cao cấp",
                            EndDate = new DateTime(2022, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2022, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectCode = "MON002",
                            SubjectName = "Toán cao cấp"
                        },
                        new
                        {
                            SubjectId = 3,
                            Description = "Mô tả Triết học Mác Lê-nin",
                            EndDate = new DateTime(2023, 2, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SubjectCode = "MON003",
                            SubjectName = "Triết học Mac-Lenin"
                        });
                });

            modelBuilder.Entity("ThucHanh.Models.Exam", b =>
                {
                    b.HasOne("ThucHanh.Models.Student", "Student")
                        .WithMany("Exams")
                        .HasForeignKey("StudentId1");

                    b.HasOne("ThucHanh.Models.Subject", "Subject")
                        .WithMany("Exams")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("ThucHanh.Models.Student", b =>
                {
                    b.Navigation("Exams");
                });

            modelBuilder.Entity("ThucHanh.Models.Subject", b =>
                {
                    b.Navigation("Exams");
                });
#pragma warning restore 612, 618
        }
    }
}
